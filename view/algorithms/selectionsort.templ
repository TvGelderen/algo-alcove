package algorithms

import (
	"github.com/TvGelderen/algo-alcove/view/pages"
	"github.com/TvGelderen/algo-alcove/view/components"
)

templ SelectionSort() {
	@pages.Algorithms() {
		@components.BreadCrumb([]components.BreadCrumbLink{
			{
				Path:  "/algorithms",
				Title: "Algorithms",
			},
			{
				Path:  "/algorithms/sorting",
				Title: "Sorting",
			},
			{
				Title: "Selection Sort",
			},
		})
		<h2 class="text-2xl md:text-3xl">Selection Sort</h2>
        @components.Code("javascript", `<span class="hljs-keyword">function</span> <span class="hljs-title function_">swap</span>(<span class="hljs-params">arr, a, b</span>) 
{ 
    <span class="hljs-keyword">let</span> temp = arr[a]; 
    arr[a] = arr[b]; 
    arr[b] = temp; 
} 
  
<span class="hljs-keyword">function</span> <span class="hljs-title function_">selectionSort</span>(<span class="hljs-params">arr</span>) 
{ 
    <span class="hljs-keyword">let</span> i, j, min_idx; 
    <span class="hljs-keyword">let</span> len = arr.<span class="hljs-property">length</span>;
  
    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) 
    { 
        min_idx = i; 
        <span class="hljs-keyword">for</span> (j = i + <span class="hljs-number">1</span>; j &lt; len; j++) {
            <span class="hljs-keyword">if</span> (arr[j] &lt; arr[min_idx]) {
                min_idx = j; 
            }
        }
  
        <span class="hljs-title function_">swap</span>(arr, min_idx, i); 
    } 
}`)
		@VisualizeSort("selection-sort")
	}
}
