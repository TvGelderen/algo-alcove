package algorithms

import (
	"github.com/TvGelderen/algora/view/pages"
	"github.com/TvGelderen/algora/view/components"
)

templ BubbleSort() {
	@pages.Algorithms() {
		@components.BreadCrumb([]components.BreadCrumbLink{
			{
				Path:  "/algorithms",
				Title: "Algorithms",
			},
			{
				Path:  "/algorithms/sorting",
				Title: "Sorting",
			},
			{
				Title: "Bubble Sort",
			},
		})
		<h2 class="text-2xl md:text-3xl">Bubble Sort</h2>
        @components.Code("javascript", `<span class="hljs-keyword">function</span> <span class="hljs-title function_">swap</span>(<span class="hljs-params">arr, a, b</span>) 
{ 
    <span class="hljs-keyword">let</span> temp = arr[a]; 
    arr[a] = arr[b]; 
    arr[b] = temp; 
} 

<span class="hljs-keyword">function</span> <span class="hljs-title function_">bubbleSort</span>(<span class="hljs-params">arr</span>) {
    <span class="hljs-keyword">let</span> i, j;
    <span class="hljs-keyword">let</span> len = arr.<span class="hljs-property">length</span>;
    <span class="hljs-keyword">let</span> isSwapped = <span class="hljs-literal">false</span>;
 
    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {
        isSwapped = <span class="hljs-literal">false</span>;
 
        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; (len - i - <span class="hljs-number">1</span>); j++) {
            <span class="hljs-keyword">if</span> (arr[j] &gt; arr[j + <span class="hljs-number">1</span>]) {
                <span class="hljs-title function_">swap</span>(arr, j, j + 1); 
                isSwapped = <span class="hljs-literal">true</span>;
            }
        }
 
        <span class="hljs-keyword">if</span> (!isSwapped) {
            <span class="hljs-keyword">break</span>;
        }
    }
}`)
		@VisualizeSort("bubble-sort")
	}
}
